use('IssueTracker');

// -------------------- Users --------------------

db.Users.insertMany([
  {
    _id: ObjectId(),
    email: "sean@example.com",
    fullName: "Sean Dev",
    password: "5f4dcc3b5aa765d61d8327deb882cf99", // MD5 of 'password'
    givenName: "Sean",
    role: "Developer",
    assignedBugs: [],
    createdBugs: []
  },
  {
    _id: ObjectId(),
    email: "jane@example.com",
    fullName: "Jane Analyst",
    password: "5f4dcc3b5aa765d61d8327deb882cf99",
    givenName: "Jane",
    role: "Business Analyst",
    assignedBugs: [],
    createdBugs: []
  }
]);

// db.Users.createIndex({ email: 1 }, { unique: true }); // Index already exists, comment out to avoid conflict

// -------------------- BUGS --------------------

db.Bugs.insertMany([
  {
    _id: ObjectId(),
    title: "Login button unresponsive",
    description: "Clicking login does nothing on Chrome v95",
    stepsToReproduce: "Open Chrome, go to login page, click login",
    authorOfBug: db.Users.findOne({ email: "sean@example.com" })._id,
    edits: [
      {
        dateTime: ISODate("2025-09-20T10:00:00Z"),
        comment: "Initial report",
        operationAuthor: db.Users.findOne({ email: "sean@example.com" })._id
      }
    ],
    comments: [
      {
        comment: "Confirmed issue",
        operationAuthor: db.Users.findOne({ email: "jane@example.com" })._id,
        dateTime: ISODate("2025-09-20T11:00:00Z"),
        text: "Needs frontend fix"
      }
    ],
    classification: "UI Bug",
    testCases: ["Click login", "Check console logs"],
    workHoursLog: [2],
    fixedInVersion: "v1.0.1",
    dateTime: ISODate("2025-09-20T09:00:00Z"),
    closedOnDate: null,
    closed: false, 
    approvedByBA: true
  },
  {
    _id: ObjectId(),
    title: "Missing password validation",
    description: "No error shown for empty password field",
    stepsToReproduce: "Submit login form with empty password",
    authorOfBug: db.Users.findOne({ email: "jane@example.com" })._id,
    edits: [],
    comments: [],
    classification: "Validation",
    testCases: [],
    workHoursLog: [],
    fixedInVersion: "",
    dateTime: ISODate("2025-09-21T08:00:00Z"),
    closedOnDate: null,
    closed: false,
    approvedByBA: false
  }
]);


db.Bugs.createIndex({ title: 1 });

db.Bugs.createIndex({ classification: 1 });